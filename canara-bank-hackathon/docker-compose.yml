version: '3.8'

services:
  # Java Spring Boot Backend
  java-backend:
    build:
      context: ./java-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/fintrust
      - BLOCKCHAIN_ETHEREUM_RPC_URL=${BLOCKCHAIN_RPC_URL}
      - BLOCKCHAIN_ETHEREUM_PRIVATE_KEY=${BLOCKCHAIN_PRIVATE_KEY}
      - AI_ENGINE_URL=http://ai-engine:8000
      - AI_ENGINE_API_KEY=${AI_ENGINE_API_KEY}
    depends_on:
      - mongo
    networks:
      - fintrust-network
    volumes:
      - java-backend-logs:/app/logs

  # Node.js Backend
  node-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/fintrust
      - JWT_SECRET=${JWT_SECRET}
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
    depends_on:
      - mongo
    networks:
      - fintrust-network
    volumes:
      - node-backend-logs:/app/logs

  # Python AI Engine
  ai-engine:
    build:
      context: ./ai_engine
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - AI_MODEL_PATH=/app/models
    networks:
      - fintrust-network
    volumes:
      - ai-engine-models:/app/models
      - ai-engine-logs:/app/logs

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_BLOCKCHAIN_NETWORK=sepolia
    depends_on:
      - java-backend
      - node-backend
    networks:
      - fintrust-network

  # MongoDB Database
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=fintrust
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fintrust-network

  # Redis Cache (for session management)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - fintrust-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - java-backend
      - node-backend
      - frontend
    networks:
      - fintrust-network

  # Blockchain Node (Ganache for development)
  ganache:
    image: trufflesuite/ganache-cli:latest
    ports:
      - "8545:8545"
    command: ganache-cli --host 0.0.0.0 --port 8545 --accounts 10 --deterministic
    networks:
      - fintrust-network

volumes:
  mongo-data:
  redis-data:
  java-backend-logs:
  node-backend-logs:
  ai-engine-models:
  ai-engine-logs:

networks:
  fintrust-network:
    driver: bridge 